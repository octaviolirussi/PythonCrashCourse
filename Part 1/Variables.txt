Naming and Using Variables

When you’re using variables in Python, you need to adhere to a few rules
and guidelines. Breaking some of these rules will cause errors; other guide-
lines just help you write code that’s easier to read and understand. Be sure
to keep the following variable rules in mind:

• Variable names can contain only letters, numbers, and underscores.
They can start with a letter or an underscore, but not with a number.
For instance, you can call a variable message_1 but not 1_message.

• Spaces are not allowed in variable names, but underscores can be used
to separate words in variable names. For example, greeting_message
works, but greeting message will cause errors.

• Avoid using Python keywords and function names as variable names;
that is, do not use words that Python has reserved for a particular pro-
grammatic purpose, such as the word print. 

• Variable names should be short but descriptive. For example, name is
better than n, student_name is better than s_n, and name_length is better
than length_of_persons_name.

• Be careful when using the lowercase letter l and the uppercase letter O
because they could be confused with the numbers 1 and 0.

--------------------------------------------------------------------------------------------------------------------

String Methods:

• name.title() --> changes each word to title case
• name.upper() --> convert strings to uppercase before storing them.
• name.lower() --> convert strings to lowercase before storing them.
• rstrip() --> To ensure that no whitespace exists at the right end of a string, lstrip() from the left and strip() from both sides
-------------------------------------------------------------------------------------------------------------------

Using Variables in Strings: 

first_name = "ada"
last_name = "lovelace"
full_name = f"{first_name} {last_name}" 
print(full_name)

print("Este es un mensaje con \"comillas dobles\" adentro") --> how to write "" in a string
Este es un mensaje con "comillas dobles" adentro

print('Este es un mensaje con \'comillas simples\' adentro')
Este es un mensaje con 'comillas simples' adentro

-------------------------------------------------------------------------------------------------------------------

Underscores in Numbers:

universe_age = 14_000_000_000
print(universe_age)
14000000000

-------------------------------------------------------------------------------------------------------------------

Constants:

Python programmers use all capital letters to indicate a variable should be treated as a
constant and never be changed:

MAX_CONNECTIONS = 5000



